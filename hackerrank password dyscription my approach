#include <bits/stdc++.h>

using namespace std;



/*
 * Complete the 'decryptPassword' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts STRING s as parameter.
 */

bool iscapital(char a)
{
    if(a>=65 && a<=90)
    return true;
    
    else return false;
}

bool issmall(char a)
{
    if(a>=97 && a<=122)
    return true;
    
    else return false;
}
string decryptPassword(string s) {
    int strt=0;
    
    //case 1:if '*' exist after character like 'Pa',it means it was aP.
    // case 2: if number exist at very first/first&second position,
    // then they ll be replaced to their orig place in LIFO manner.
    
    string str=s;
    queue<int>q1,q2;
    queue<pair<int,int>>qp;
    vector<int>v;
    for(int i=0;i<s.length();i++)
    {
         if(str[i]<=57 && str[i]>=49){
            q1.push(str[i]);
        }
        
        if(iscapital(str[i]) && issmall(str[i+1]) && str[i+2]=='*')
        {
            qp.push(make_pair(str[i],str[i+1]));
        }
        else if(str[i]=='0'){
            q2.push(i);
        }
    }
    while(strt<s.length()){
        if(str[strt]<=57 && str[strt]>=49){
            
        }
        
        if(iscapital(str[strt]) && issmall(str[strt+1]) && str[strt+2]=='*')
        {
            qp.push(make_pair(str[strt],str[strt+1]));
        }
        else if(str[strt]=='0'){
            q2.push(i);
        }
    }
    

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string s;
    getline(cin, s);

    string result = decryptPassword(s);

    fout << result << "\n";

    fout.close();

    return 0;
}
